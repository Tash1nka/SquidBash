#!/bin/bash

bold=$(tput bold)
nobold=$(tput sgr0)

function show_help(){
  echo "Help"
}

function play() {
  # Init vars
  clear
  player_marbles=10
  computer_marbles=10
  game_started=false
  choose_starting_player=$(( $RANDOM % 2 ))
  player=''

  # Select Starting player
  if [[ $choose_starting_player == 0 ]]; then
    if ! $game_started; then
      echo -e "\e[32m${bold}You start playing !${nobold}\e[0m"
      game_started=true
      player='player'
    fi
  else
    if ! $game_started ; then
      echo -e "\e[32m${bold} Computer start playing !${nobold}\e[0m"
      game_started=true
      player='computer'
    fi
  fi
  
  # Play until one loose
  until (( $player_marbles <= 0 || $computer_marbles <= 0 )); do
  
    # Player Play
    if [[ $player == 'player' ]]; then
      echo ""
      echo "${bold}Your turn:${nobold}"
      echo -en "You have \e[32m$player_marbles marbles\e[0m. How much do you want to use: "
      read player_played_marbles
      
      while ! (( $player_played_marbles <= $player_marbles )); do
        read -p "Not enough marbles, choose $player_marbles or less: " player_played_marbles
      done

      echo -e "You choosed \e[32m$player_played_marbles\e[0m marbles."

      echo ""
      echo "Computer is guessing..."
      sleep 5

      # Choose random answer for computer between odd/even
      computer_guess=$(( $RANDOM % 2 ))
      if (( $computer_guess == $(( $player_played_marbles % 2 )) )); then
        player_marbles=$(( $player_marbles - $player_played_marbles ))
        computer_marbles=$(( $computer_marbles + $player_played_marbles ))
        echo -e "Computer guessed right. You \e[31mlose\e[0m this round."
        echo -e "You have \e[32m$player_marbles\e[0m marbles left."
      else
        player_marbles=$(( $player_marbles + $player_played_marbles ))
        computer_marbles=$(( $computer_marbles - $player_played_marbles ))
        echo -e "Computer was wrong. You \e[32mwon\e[0m this round."
        echo -e "You have \e[32m$player_marbles\e[0m marbles left."
      fi

      player='computer'

    # Computer's Play
    else
      echo ""
      echo "${bold}Computer's turn:${nobold}"
      echo "Computer is choosing marbles..."
      sleep 5

      computer_choice=$(( $RANDOM % $computer_marbles ))
      until [[ $computer_choice != 0 ]]; do
        computer_choice=$(( $RANDOM % $computer_marbles ))
      done  

      echo "Computer choice: $computer_choice"

      # Player guess
      read -p "Enter your guess: [odd/even]: " player_guess

      while ! [[ $player_guess =~ ^('o'|'odd'|'Odd'|'e'|'even'|'Even')$ ]]; do
        read -p "Please enter a valid guess [odd/even]: " player_guess
      done

      # Player guess conversion
      if [[ $player_guess =~ ^('e'|'even'|'Even')$ ]]; then
        player_guess=0
      else
        player_guess=1
      fi

      # Check result
      if (( $player_guess == $(( $computer_choice % 2 )) )); then
        player_marbles=$(( $player_marbles + $computer_choice ))
        computer_marbles=$(( $computer_marbles - $computer_choice ))
        echo -e "You guessed right. You \e[32mwon\e[0m this round."
        echo -e "You have \e[32m$player_marbles\e[0m marbles left."
      else
        player_marbles=$(( $player_marbles - $computer_choice ))
        computer_marbles=$(( $computer_marbles + $computer_choice ))
        echo -e "You guessed wrong. You \e[31mlost\e[0m this round."
        echo -e "You have \e[32m$player_marbles\e[0m marbles left."
      fi

      player='player'
    fi

  done

  # Check who win
  if (( $computer_marbles <= 0 )); then
    echo ""
    echo -e "You \e[32mWON\e[0m the game !"
  else
    echo ""
    echo -e "You \e[31mLOST\e[0m the game !"
  fi
  
  # Ask to play again
  if (( $computer_marbles <= 0 || $player_marbles <= 0 )); then
    read -p "Do you want to play again ? [y/n] : " play_again
  
    until [[ $play_again == 'Y' || $play_again == 'y' || $play_again == 'N' || $play_again == 'n' ]]; do
       read -p "Please enter 'y' for yes or 'n' for no: " play_again
    done

    if [[ $play_again == 'y' || $play_again == 'Y' ]]; then
      play
    else
      echo "Thanks for playing SquidBash ! :D"
      echo "Exiting..."
      sleep 3
      clear
      exit
    fi
  fi
} 

function menu() {
  clear
  echo -e "                                       
  \e[31m${bold}
   _____         _   _ _____         _   
  |   __|___ _ _|_|_| | __  |___ ___| |_ 
  |__   | . | | | | . | __ -| .'|_ -|   |
  |_____|_  |___|_|___|_____|__,|___|_|_|
          |_|                            

    Welcome to SquidBash
    Simple bash script to play Squid Game's marble game.

    1. Play
    2. Help
    3. Quit
  ${nobold}\e[0m
    "

  read -p "Choose an option: " menu_option

  if [[ $menu_option == 1 ]]; then
    play
  elif [[ $menu_option == 2 ]]; then
    show_help
    exit
  elif [[ $menu_option == 3 ]]; then
    exit
  fi
}

menu
